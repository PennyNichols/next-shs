rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if the requesting user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to safely get the user's role from their 'users' document
    function getUserRole(userId) {
      return exists(/databases/$(database)/documents/users/$(userId)) ? 
        get(/databases/$(database)/documents/users/$(userId)).data.role : null;
    }

    // Define roles that have elevated privileges
    function isSuperUser() {
      return isAuthenticated() && getUserRole(request.auth.uid) == 'super';
    }

    function isAdmin() {
      let role = getUserRole(request.auth.uid);
      return isAuthenticated() && (role == 'admin' || role == 'super');
    }

    // Rules for the entire 'users' collection
    match /users/{userId} {
      // Allow a user to read their own profile.
      // Allow 'admin' or 'super' users to read any user profile.
      allow read: if isAuthenticated() && (request.auth.uid == userId || isAdmin());
      
      // Allow 'admin' or 'super' users to list all users for impersonation
      allow list: if isAuthenticated() && isAdmin();

      // Allow a user to update their own profile.
      // Allow 'admin' or 'super' users to update any user profile.
      // Prevent direct client-side role changes by non-super users.
      allow update: if isAuthenticated() && (
        (request.auth.uid == userId && request.resource.data.role == resource.data.role) || // User can update self, but not change role
        (isAdmin() && (!request.resource.data.role || isSuperUser())) // Admin can update, Super can change roles
      ); // Removed strict updatedAt == request.time check to allow client updates

      // Allow a user to create their own profile during signup (if doc ID matches UID).
      // Allow 'super' users to create user profiles via backend (which this rule implicitly allows if doc matches UID and is handled by client-side setDoc).
      allow create: if isAuthenticated() && request.auth.uid == userId && request.resource.data.createdAt == request.time;

      // Allow a user to delete their own account (handled by client-side deleteUser in auth.js).
      // Backend 'delete /users/:userId' is restricted to 'super' and prevents self-deletion.
      allow delete: if isAuthenticated() && request.auth.uid == userId;
    }

    // Rules for the 'subscribers' collection
    match /subscribers/{subscriptionId} {
      // Allow unauthenticated and authenticated users to create (subscribe).
      allow create: if true;
      // Restrict read and delete to 'admin' or 'super' roles only, which are handled by Cloud Functions.
      // No direct client-side delete/read for subscribers.
      allow read, delete: if false; // Only via backend functions
    }

    // Rules for the 'blogPosts' collection
    match /blogPosts/{blogPostId} {
      // Allow everyone to read blog posts publicly.
      allow read: if true;
      // Allow 'admin' or 'super' users to create, update, or delete blog posts via backend functions.
      // Direct client-side writes are forbidden for security.
      allow create, update, delete: if false; // Only via backend functions
    }

    // Rules for the 'estimate_requests' collection
    match /estimate_requests/{requestId} {
      // Allow unauthenticated and authenticated users to create new estimate requests.
      allow create: if request.resource.data.createdAt == request.time;

      // Allow clients to read their own estimate requests.
      // Allow 'admin' or 'super' users to read any estimate request.
      allow read: if isAuthenticated() && (
        request.auth.uid == resource.data.userId || // Client owns it
        isAdmin() // Admin or Super user
      );

      // Allow only 'admin' or 'super' to update an estimate request status.
      // Clients *cannot* change status. Other fields updated via backend.
      allow update: if isAuthenticated() && isAdmin();

      // Allow only 'admin' or 'super' to delete estimate requests.
      allow delete: if isAuthenticated() && isAdmin();
    }
  }
}